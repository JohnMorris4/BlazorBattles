@page "/register"
@inject IUnitService UnitService
@inject NavigationManager NavigationManager
<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator/>
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.EmailAddress" class="form-control"/>
        <ValidationMessage For="@(() => user.EmailAddress)"/>
    </div>
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="user.UserName" class="form-control"/>
        <ValidationMessage For="@(() => user.UserName)"/>
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" type="password" @bind-Value="user.Password" class="form-control"/>
        <ValidationMessage For="@(() => user.Password)"/>
    </div>
    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" type="password" @bind-Value="user.ConfirmPassword" class="form-control"/>
        <ValidationMessage For="@(() => user.ConfirmPassword)"/>
    </div>
    <div class="form-group">
        <label for="bio">Bio</label>
        <InputTextArea id="bio" type="password" @bind-Value="user.Bio" class="form-control"/>
    </div>
    <div class="form-group">
        <label for="bananas">Bananas</label>
        <InputNumber id="bananas" @bind-Value="user.Bananas" class="form-control"/>
        <ValidationMessage For="@(() => user.Bananas)"/>
    </div>
    <div class="form-group">
        <label for="startUnit">Start Unit</label>
        <InputSelect id="startUnit" @bind-Value="user.StartUnitId" class="form-control">
            @foreach (var unit in UnitService.Units)
            {
                <option value="@unit.Id.ToString()">@unit.Title</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="dateOfBirth">Date Of Birth</label>
        <InputDate id="dateOfBirth" @bind-Value="user.DateOfBirth" class="form-control"/>
    </div>
    <div class="form-check">
        <InputCheckbox id="confirmed" @bind-Value="user.IsConfirmed" class="form-check-input"/>
        <label for="confirmed">Confirmed</label>
        <ValidationMessage For="@(() => user.IsConfirmed)"/>
    </div>
    <button class="btn btn-primary" type="submit">Register</button>
</EditForm>

@code {
    readonly UserRegister user = new UserRegister();

    void HandleRegistration()
    {
        NavigationManager.NavigateTo("login");
    }
    protected override async Task OnInitializedAsync()
    {
        await UnitService.LoadUnitsAsync();
    }
}